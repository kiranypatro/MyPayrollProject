@model HR_Payroll.Models.Salary_Group_Type_Master

@{
    Layout = null;
    ViewBag.Title = "AddUpdate_Salary_Group_Type_Master";

}

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

@using (Html.BeginForm("AddUpdate_Salary_Group_Type_Master", "Employee", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.Salary_Group_Type_ID)

    <div class="form-group">
            @Html.Label("Salary Group Type Code",new { @class = "control-label" })
        
            @Html.EditorFor(model => model.Salary_Group_Type_Code, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            @Html.ValidationMessageFor(model => model.Salary_Group_Type_Code, "", new { @class = "text-danger" })
        
    </div>

    <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
       
    </div>
    <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
        
            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        
    </div>

    <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
       
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        
    </div>



    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        <input type="reset" value="Cancel" class="btn btn-primary" />
    </div>

}

